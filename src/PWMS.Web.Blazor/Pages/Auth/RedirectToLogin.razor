@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (authenticated)
{
    <p>not authorized</p>
}

@code {
    private bool authenticated = false;

    protected override async void OnInitialized()
    {
        var asd = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if ((await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity!.IsAuthenticated)
        {
            authenticated = true;
            StateHasChanged();
        }
        else
        {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

            if (returnUrl == "")
            {
                NavigationManager.NavigateTo("/login", forceLoad: true);
            }
            else
            {
                NavigationManager.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(returnUrl)}", forceLoad: true);
            }
        }
    }
}
